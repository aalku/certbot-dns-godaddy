name: ci

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  ShellCheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master

  Docker:
    needs: [ShellCheck]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        if: success()
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: success()
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms:  ${{ steps.qemu.outputs.platforms }}
          push: true
          tags: |
            ${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest
  Poetry:
    needs: [ShellCheck]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.6
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

  Snapcraft:
    needs: [ShellCheck]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: certbot/certbot
          path: upstream
      - uses: actions/setup-python@v2
        with:
          python-version: 3
          cache: pip
      - name: Install Snapcraft with LXD
        uses: samuelmeuli/action-snapcraft@v2
      - name: Build snap
        run: sg lxd -c 'snapcraft --use-lxd'